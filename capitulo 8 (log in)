capitulo 8 (log in)

creo controller session paa hacer log in y log out

form_for(@user) // rails manda los datos a un objeto modelo user
form_for(:session, url: login_path) // como no objeto modelo session manda datos session a login:path (rails sabe q los tiene q  mandar al post)



user.find y user.authentificate //validan al usario en base de datos

metodo session crea cookies temporales con los datos entregado (cookies son encriptados)

creo variables q verfican si hay alguien loggeado curren_user, con eso puedo modificar el aspecto de la  web (menus)
 
 agrego esto para funcionalidades de bootstrap // app/assets/javascripts/application.js

//=require jquery
//=require jquery_ujs
//=require bootstrap
//=require turbolinks
//=require_tree .



user.digest // modelo user ? no lo entendi


creo log out en sessio helper para deslogear al ususario

comienzo el recuerdame, incluso si cierro el navegador

los de session desaparece al cerrar el navegador

storing a userâ€™s (encrypted)

rails generate migration add_remember_digest_to_users remember_digest:string //agrego a tabla remember_digest para autentificar cookues

agrego random token en //user model

attr_accessor :remember_token //tipo attr_accessor son variables declaradas en los modelos y pueden ser sadas de maera global



User.new_token, crea clave
User.digest(string), encripta clave
remember , actualiza la clave en db
authenticated?(remember_token) , compara los desencriptado de db con el token remeber_token dado


cookies persistentes 

actualizo en current user en sessison hyelper


//ahora aplicacion recuerda a ussrio aunque cierre l apalicacion
 como ver los browser cookies?


 olvidar usuario forget // en modelo user borra el remember digest


remember checkbox 



capitulo 9

git updating-users


edit // user controler editar usyario
edit // view/user/edit.html.erb

agregar a tabla
la forma del siguiente codigo  
+rails generate migration // comando que agrega atributos a base de datos
+add_"nombre_migracion"_add_to_"nombre modelo/tabla que agregare"  // modelo es llamado en plural
+\ "nombre_atributo1": "tipo_dato" "nombre_atributo2": "tipo_dato" "nombre_atributo2": "tipo_dato"

$ rails generate migration add_activation_to_users \ activation_digest:string activated:boolean activated_at:datetime


rails generate migration add_atributos_to_users \ numero_contacto:sring calle_envio:string numero_envio:string comuna_envio:string

bundle exec rake db:migrate // actuaiaz la tabla

agrege numero_contacto,calle,numero_calle,comuna // user_controller, edit.html, new.html (login)

update / user_controller , llamado desde edit usuario html


AUTHEBTIFICACION

before_action :logged_in_user, only: [:edit, :update]  // antes de acceder a metodo edit o update , se hace logged_in_user

UNLESS (CONDICION) , si condicion es falsa de hace el bloque
logged_in_user // evita que gente no logeeada edite usuarios
correct_user // evito q el usuario logeado edite otro perfil q no sea el de el usa atributos y metodos de otros controllers
  


redireck_back , store_location // redirige a la paguina q trataba, session_controller, session_helper, user_controller

agrego index a before_action //use congtorller
modifico funcion gravatar size ,  user_helper


gem 'faker', '1.4.2' // agrego a gemfile

bundle exec rake db:migrate:reset // borro base de datos
bundle exec rake db:seed // lleno base con lo q hay en /db/seed.rb

// agrego para will paginate estos en gemmfile
gem 'will_paginate', '3.0.7'
gem 'bootstrap-will_paginate', '0.0.10'

index // user_controller
index.html



rails generate migration add_admin_to_users   \ admin:boolean  comprador:boolean vendedor:boolean // creo tipos de usuario


admin en base de dato

delete // _user.html , user_controller, index.html
destroy // user controller

stan-dard REST ?



CAPITULO 10 

CREO controller activasion cuenta
activation_digest:string activated:boolean activated_at:datetime // a user model
activation_token, activation_digest //user model
rails generate mailer UserMailer account_activation password_reset //madar mails
	/views/user_mailer/account_activation.text.erb
	app/views/user_mailer/account_activation.html.erb
	app/mailers/application_mailer.rb
	app/mailers/user_mailer.rb


mailer crea 2 vistas en modo texto y modo html
reveer el tema de mail pa q quede claro

modifico para visualizar los mails  // config/environments/development.rb , account_activayion.html

metaprogramacion 563 // unthentificate generico

agrego edit // activation_controller

activar cuenta // app/controllers/sessions_controller.rb


activate, send_activation_email // app/models/user.rb

modifico create //app/controllers/users_controller.rb


atrapao en hacer funcionar la wea de MAAILLLLLLLLLLL CUCPALO PROGRAMACION CULIA DE LA PERRA
HAY Q TENER USUAARIOS ACTIVOS PA CAMBIAR LA WEA DE PASSWORD




*me pitie la table usuario* / no se como?

la repare eliminandola   	/ rails destroy model User
y agregando cada atributo 	/ rails generate migration add_nombre-caracteristico_to_users nombre_atributo:tipo_atributo
							/ actualizo la tabla en base con rails exec rake db:migrate





capitu 11  micropost 



creo micropost controller / user:referece me crea la relacion belong to user en modelo micropost

agrego has many micropost / en mmodelo user

agrego validaciones en / en modelo micropost

default scope / ordena los post del mas nuevo al mas viejo


creo controlador micropost / pero la vista de micropost _micropost (_ se les llama parciales ) sera renderizado desde otra vista (user show)

@microposts // variable en show que guarda todos los posteos de ese ususario (con will paginate)

edito show vista , agrego bloque q muestra post uso micropost.any? (solo si hay post , tambien existe el micropost.count  q me da la cantidad de post)

creo micropost de prueba en seeds
agrego css ded micropost en custom css

agrego logged_in_user // aplication controler para modificar microspor debo estar loggeado, lo llamo desde micropost controller y a su vez llama a logged in ? q esta en session helper

before_action :logged_in_user, only: [:create, :destroy] // en micropost crontroller
 
create y micropost params // micropost controller


CAMBIO COMO SE VE PAGINA DE INICIO DEPENDIENDO SI HAY USUARIO //modifico vista static pages home, 

creo parcial shres info  y _micropost_form.html.erb //app/views/shared/_user_info.html.erb 

@micropost = current_user.microposts.build if logged_in? // static pages home , controller

@user por object // generalizo errores en shared/_error_messengers

<%= render 'shared/error_messages', object: f.object %> // vista user/ edit,new y en password reset

QUEFDE EN FEED // PAIGINA INICIO VISTA COMPARTIDA CAJA DE POSTEO Y LISTA DE POSTEOS (FEEDS)

metodo feed en en // user model
@feed  // static page controller
_feed.html //shared view

agrego feed vacio // micropost controller
delete link // _microspot.html

before action correct user y destroy // micrpost controller

MICROPOST IMAGENES QUEDE

